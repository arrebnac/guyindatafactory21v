{
	"name": "pipeline6",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQLServerSourceDataSet",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": {
								"value": "@pipeline().parameters.SourceTableName",
								"type": "Expression"
							},
							"SourceDBName": {
								"value": "@pipeline().parameters.SourceDBName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTargetDataSet",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": {
								"value": "@pipeline().parameters.SinkTableName",
								"type": "Expression"
							},
							"SinkDBName": {
								"value": "@pipeline().parameters.SinkDBName",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"SourceDBName": {
				"type": "string"
			},
			"SourceTableName": {
				"type": "string"
			},
			"SinkDBName": {
				"type": "string"
			},
			"SinkTableName": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Demo/SimpleCopy"
		},
		"annotations": [],
		"lastPublishTime": "2023-05-15T08:15:20Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}