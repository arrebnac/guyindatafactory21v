{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "guyindatafactory"
		},
		"StorageTrigger_properties_pipeline1_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"StorageTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e07f04f0-fa81-48d1-927e-212f1beca349/resourceGroups/guyinstorage/providers/Microsoft.Storage/storageAccounts/guyinadls"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from dbo.TableMapping",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CDMP_AzureSQL",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "TableMapping",
									"SchemaName": "dbo",
									"DBName": "testdb"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureDatabricksDeltaLakeSink",
											"importSettings": {
												"type": "AzureDatabricksDeltaLakeImportCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "guyinadls",
												"type": "LinkedServiceReference"
											},
											"path": "datafactory/staging"
										},
										"translator": {
											"value": "@json(item().Mapping)",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "CDMP_SQL2019",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": {
													"value": "@item().SourceSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().SourceTable",
													"type": "Expression"
												},
												"DBName": {
													"value": "@item().SourceDB",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CDMP_DeltaLake",
											"type": "DatasetReference",
											"parameters": {
												"DBName": {
													"value": "@item().SinkDB",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().SinkTable",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Ford/CDMP"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-19T10:07:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLServerSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									},
									"SourceDBName": {
										"value": "@pipeline().parameters.SourceDBName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTargetDataSet",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "dbo",
									"TableName": {
										"value": "@pipeline().parameters.SinkTableName",
										"type": "Expression"
									},
									"SinkDBName": {
										"value": "@pipeline().parameters.SinkDBName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceDBName": {
						"type": "string"
					},
					"SourceTableName": {
						"type": "string"
					},
					"SinkDBName": {
						"type": "string"
					},
					"SinkTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Demo/SimpleCopy"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-15T08:15:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('StorageTrigger_properties_pipeline1_parameters_FileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/datafactory/blobs/Sony/StorageTrigger",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('StorageTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}